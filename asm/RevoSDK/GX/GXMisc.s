.include "macros.inc"

.section .text, "ax"

glabel GXSetMisc
/* 800A5BA4 000A10C4  2C 03 00 02 */	cmpwi r3, 2
/* 800A5BA8 000A10C8  41 82 00 58 */	beq lbl_800A5C00
/* 800A5BAC 000A10CC  40 80 00 14 */	bge lbl_800A5BC0
/* 800A5BB0 000A10D0  2C 03 00 00 */	cmpwi r3, 0
/* 800A5BB4 000A10D4  4D 82 00 20 */	beqlr 
/* 800A5BB8 000A10D8  40 80 00 14 */	bge lbl_800A5BCC
/* 800A5BBC 000A10DC  4E 80 00 20 */	blr 
lbl_800A5BC0:
/* 800A5BC0 000A10E0  2C 03 00 04 */	cmpwi r3, 4
/* 800A5BC4 000A10E4  4C 80 00 20 */	bgelr 
/* 800A5BC8 000A10E8  48 00 00 50 */	b lbl_800A5C18
lbl_800A5BCC:
/* 800A5BCC 000A10EC  54 80 04 3F */	clrlwi. r0, r4, 0x10
/* 800A5BD0 000A10F0  80 A2 86 40 */	lwz r5, lbl_80247E40@sda21(r2)
/* 800A5BD4 000A10F4  B0 85 00 04 */	sth r4, 4(r5)
/* 800A5BD8 000A10F8  7C 03 00 34 */	cntlzw r3, r0
/* 800A5BDC 000A10FC  38 00 00 01 */	li r0, 1
/* 800A5BE0 000A1100  54 63 DC 3E */	rlwinm r3, r3, 0x1b, 0x10, 0x1f
/* 800A5BE4 000A1104  B0 65 00 00 */	sth r3, 0(r5)
/* 800A5BE8 000A1108  B0 05 00 02 */	sth r0, 2(r5)
/* 800A5BEC 000A110C  4D 82 00 20 */	beqlr 
/* 800A5BF0 000A1110  80 05 05 FC */	lwz r0, 0x5fc(r5)
/* 800A5BF4 000A1114  60 00 00 08 */	ori r0, r0, 8
/* 800A5BF8 000A1118  90 05 05 FC */	stw r0, 0x5fc(r5)
/* 800A5BFC 000A111C  4E 80 00 20 */	blr 
lbl_800A5C00:
/* 800A5C00 000A1120  7C 04 00 D0 */	neg r0, r4
/* 800A5C04 000A1124  80 62 86 40 */	lwz r3, lbl_80247E40@sda21(r2)
/* 800A5C08 000A1128  7C 00 23 78 */	or r0, r0, r4
/* 800A5C0C 000A112C  54 00 0F FE */	srwi r0, r0, 0x1f
/* 800A5C10 000A1130  98 03 05 F9 */	stb r0, 0x5f9(r3)
/* 800A5C14 000A1134  4E 80 00 20 */	blr 
lbl_800A5C18:
/* 800A5C18 000A1138  7C 04 00 D0 */	neg r0, r4
/* 800A5C1C 000A113C  80 62 86 40 */	lwz r3, lbl_80247E40@sda21(r2)
/* 800A5C20 000A1140  7C 00 23 78 */	or r0, r0, r4
/* 800A5C24 000A1144  54 00 0F FE */	srwi r0, r0, 0x1f
/* 800A5C28 000A1148  98 03 05 FA */	stb r0, 0x5fa(r3)
/* 800A5C2C 000A114C  4E 80 00 20 */	blr 

glabel GXFlush
/* 800A5C30 000A1150  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800A5C34 000A1154  7C 08 02 A6 */	mflr r0
/* 800A5C38 000A1158  80 62 86 40 */	lwz r3, lbl_80247E40@sda21(r2)
/* 800A5C3C 000A115C  90 01 00 14 */	stw r0, 0x14(r1)
/* 800A5C40 000A1160  80 03 05 FC */	lwz r0, 0x5fc(r3)
/* 800A5C44 000A1164  2C 00 00 00 */	cmpwi r0, 0
/* 800A5C48 000A1168  41 82 00 08 */	beq lbl_800A5C50
/* 800A5C4C 000A116C  48 00 08 89 */	bl __GXSetDirtyState
lbl_800A5C50:
/* 800A5C50 000A1170  38 00 00 00 */	li r0, 0
/* 800A5C54 000A1174  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 800A5C58 000A1178  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 800A5C5C 000A117C  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5C60 000A1180  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5C64 000A1184  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5C68 000A1188  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5C6C 000A118C  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5C70 000A1190  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5C74 000A1194  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5C78 000A1198  4B FE 8D 45 */	bl PPCSync
/* 800A5C7C 000A119C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800A5C80 000A11A0  7C 08 03 A6 */	mtlr r0
/* 800A5C84 000A11A4  38 21 00 10 */	addi r1, r1, 0x10
/* 800A5C88 000A11A8  4E 80 00 20 */	blr 

glabel __GXAbort
/* 800A5C8C 000A11AC  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800A5C90 000A11B0  7C 08 02 A6 */	mflr r0
/* 800A5C94 000A11B4  90 01 00 24 */	stw r0, 0x24(r1)
/* 800A5C98 000A11B8  39 61 00 20 */	addi r11, r1, 0x20
/* 800A5C9C 000A11BC  48 0B 6C A9 */	bl _savegpr_27
/* 800A5CA0 000A11C0  80 62 86 40 */	lwz r3, lbl_80247E40@sda21(r2)
/* 800A5CA4 000A11C4  88 03 05 FA */	lbz r0, 0x5fa(r3)
/* 800A5CA8 000A11C8  2C 00 00 00 */	cmpwi r0, 0
/* 800A5CAC 000A11CC  41 82 00 A0 */	beq lbl_800A5D4C
/* 800A5CB0 000A11D0  4B FF F1 99 */	bl func_800A4E48
/* 800A5CB4 000A11D4  54 60 06 3F */	clrlwi. r0, r3, 0x18
/* 800A5CB8 000A11D8  41 82 00 94 */	beq lbl_800A5D4C
/* 800A5CBC 000A11DC  80 AD 8E 9C */	lwz r5, lbl_8024731C@sda21(r13)
/* 800A5CC0 000A11E0  A0 05 00 4E */	lhz r0, 0x4e(r5)
lbl_800A5CC4:
/* 800A5CC4 000A11E4  7C 03 03 78 */	mr r3, r0
/* 800A5CC8 000A11E8  A0 85 00 50 */	lhz r4, 0x50(r5)
/* 800A5CCC 000A11EC  A0 05 00 4E */	lhz r0, 0x4e(r5)
/* 800A5CD0 000A11F0  7C 00 18 40 */	cmplw r0, r3
/* 800A5CD4 000A11F4  40 82 FF F0 */	bne lbl_800A5CC4
/* 800A5CD8 000A11F8  54 03 80 1E */	slwi r3, r0, 0x10
/* 800A5CDC 000A11FC  38 00 00 00 */	li r0, 0
/* 800A5CE0 000A1200  7C 7B 23 78 */	or r27, r3, r4
/* 800A5CE4 000A1204  3B A0 00 08 */	li r29, 8
/* 800A5CE8 000A1208  6C 1C 80 00 */	xoris r28, r0, 0x8000
lbl_800A5CEC:
/* 800A5CEC 000A120C  4B FF 30 DD */	bl OSGetTime
/* 800A5CF0 000A1210  7C 9F 23 78 */	mr r31, r4
/* 800A5CF4 000A1214  7C 7E 1B 78 */	mr r30, r3
lbl_800A5CF8:
/* 800A5CF8 000A1218  4B FF 30 D1 */	bl OSGetTime
/* 800A5CFC 000A121C  7C 9F 20 10 */	subfc r4, r31, r4
/* 800A5D00 000A1220  7C 1E 19 10 */	subfe r0, r30, r3
/* 800A5D04 000A1224  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800A5D08 000A1228  7C 04 E8 10 */	subfc r0, r4, r29
/* 800A5D0C 000A122C  7C 63 E1 10 */	subfe r3, r3, r28
/* 800A5D10 000A1230  7C 7C E1 10 */	subfe r3, r28, r28
/* 800A5D14 000A1234  7C 63 00 D1 */	neg. r3, r3
/* 800A5D18 000A1238  41 82 FF E0 */	beq lbl_800A5CF8
/* 800A5D1C 000A123C  80 AD 8E 9C */	lwz r5, lbl_8024731C@sda21(r13)
/* 800A5D20 000A1240  A0 05 00 4E */	lhz r0, 0x4e(r5)
lbl_800A5D24:
/* 800A5D24 000A1244  7C 03 03 78 */	mr r3, r0
/* 800A5D28 000A1248  A0 85 00 50 */	lhz r4, 0x50(r5)
/* 800A5D2C 000A124C  A0 05 00 4E */	lhz r0, 0x4e(r5)
/* 800A5D30 000A1250  7C 00 18 40 */	cmplw r0, r3
/* 800A5D34 000A1254  40 82 FF F0 */	bne lbl_800A5D24
/* 800A5D38 000A1258  54 00 80 1E */	slwi r0, r0, 0x10
/* 800A5D3C 000A125C  7C 00 23 78 */	or r0, r0, r4
/* 800A5D40 000A1260  7C 00 D8 40 */	cmplw r0, r27
/* 800A5D44 000A1264  7C 1B 03 78 */	mr r27, r0
/* 800A5D48 000A1268  40 82 FF A4 */	bne lbl_800A5CEC
lbl_800A5D4C:
/* 800A5D4C 000A126C  38 00 00 01 */	li r0, 1
/* 800A5D50 000A1270  3C 60 CC 00 */	lis r3, 0xCC003018@ha
/* 800A5D54 000A1274  90 03 30 18 */	stw r0, 0xCC003018@l(r3)
/* 800A5D58 000A1278  4B FF 30 71 */	bl OSGetTime
/* 800A5D5C 000A127C  38 00 00 00 */	li r0, 0
/* 800A5D60 000A1280  7C 9F 23 78 */	mr r31, r4
/* 800A5D64 000A1284  7C 7E 1B 78 */	mr r30, r3
/* 800A5D68 000A1288  3B A0 00 32 */	li r29, 0x32
/* 800A5D6C 000A128C  6C 1C 80 00 */	xoris r28, r0, 0x8000
lbl_800A5D70:
/* 800A5D70 000A1290  4B FF 30 59 */	bl OSGetTime
/* 800A5D74 000A1294  7C 9F 20 10 */	subfc r4, r31, r4
/* 800A5D78 000A1298  7C 1E 19 10 */	subfe r0, r30, r3
/* 800A5D7C 000A129C  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800A5D80 000A12A0  7C 04 E8 10 */	subfc r0, r4, r29
/* 800A5D84 000A12A4  7C 63 E1 10 */	subfe r3, r3, r28
/* 800A5D88 000A12A8  7C 7C E1 10 */	subfe r3, r28, r28
/* 800A5D8C 000A12AC  7C 63 00 D1 */	neg. r3, r3
/* 800A5D90 000A12B0  41 82 FF E0 */	beq lbl_800A5D70
/* 800A5D94 000A12B4  3B C0 00 00 */	li r30, 0
/* 800A5D98 000A12B8  3C 60 CC 00 */	lis r3, 0xCC003018@ha
/* 800A5D9C 000A12BC  93 C3 30 18 */	stw r30, 0xCC003018@l(r3)
/* 800A5DA0 000A12C0  4B FF 30 29 */	bl OSGetTime
/* 800A5DA4 000A12C4  6F DF 80 00 */	xoris r31, r30, 0x8000
/* 800A5DA8 000A12C8  7C 9C 23 78 */	mr r28, r4
/* 800A5DAC 000A12CC  7C 7D 1B 78 */	mr r29, r3
/* 800A5DB0 000A12D0  3B C0 00 05 */	li r30, 5
lbl_800A5DB4:
/* 800A5DB4 000A12D4  4B FF 30 15 */	bl OSGetTime
/* 800A5DB8 000A12D8  7C 9C 20 10 */	subfc r4, r28, r4
/* 800A5DBC 000A12DC  7C 1D 19 10 */	subfe r0, r29, r3
/* 800A5DC0 000A12E0  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800A5DC4 000A12E4  7C 04 F0 10 */	subfc r0, r4, r30
/* 800A5DC8 000A12E8  7C 63 F9 10 */	subfe r3, r3, r31
/* 800A5DCC 000A12EC  7C 7F F9 10 */	subfe r3, r31, r31
/* 800A5DD0 000A12F0  7C 63 00 D1 */	neg. r3, r3
/* 800A5DD4 000A12F4  41 82 FF E0 */	beq lbl_800A5DB4
/* 800A5DD8 000A12F8  39 61 00 20 */	addi r11, r1, 0x20
/* 800A5DDC 000A12FC  48 0B 6B B5 */	bl _restgpr_27
/* 800A5DE0 000A1300  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800A5DE4 000A1304  7C 08 03 A6 */	mtlr r0
/* 800A5DE8 000A1308  38 21 00 20 */	addi r1, r1, 0x20
/* 800A5DEC 000A130C  4E 80 00 20 */	blr 

glabel GXAbortFrame
/* 800A5DF0 000A1310  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800A5DF4 000A1314  7C 08 02 A6 */	mflr r0
/* 800A5DF8 000A1318  90 01 00 24 */	stw r0, 0x24(r1)
/* 800A5DFC 000A131C  39 61 00 20 */	addi r11, r1, 0x20
/* 800A5E00 000A1320  48 0B 6B 41 */	bl _savegpr_26
/* 800A5E04 000A1324  83 E2 86 40 */	lwz r31, lbl_80247E40@sda21(r2)
/* 800A5E08 000A1328  88 1F 05 FA */	lbz r0, 0x5fa(r31)
/* 800A5E0C 000A132C  2C 00 00 00 */	cmpwi r0, 0
/* 800A5E10 000A1330  41 82 00 A0 */	beq lbl_800A5EB0
/* 800A5E14 000A1334  4B FF F0 35 */	bl func_800A4E48
/* 800A5E18 000A1338  54 60 06 3F */	clrlwi. r0, r3, 0x18
/* 800A5E1C 000A133C  41 82 00 94 */	beq lbl_800A5EB0
/* 800A5E20 000A1340  80 AD 8E 9C */	lwz r5, lbl_8024731C@sda21(r13)
/* 800A5E24 000A1344  A0 65 00 4E */	lhz r3, 0x4e(r5)
lbl_800A5E28:
/* 800A5E28 000A1348  7C 60 1B 78 */	mr r0, r3
/* 800A5E2C 000A134C  A0 85 00 50 */	lhz r4, 0x50(r5)
/* 800A5E30 000A1350  A0 65 00 4E */	lhz r3, 0x4e(r5)
/* 800A5E34 000A1354  7C 03 00 40 */	cmplw r3, r0
/* 800A5E38 000A1358  40 82 FF F0 */	bne lbl_800A5E28
/* 800A5E3C 000A135C  54 63 80 1E */	slwi r3, r3, 0x10
/* 800A5E40 000A1360  38 00 00 00 */	li r0, 0
/* 800A5E44 000A1364  7C 7A 23 78 */	or r26, r3, r4
/* 800A5E48 000A1368  3B 80 00 08 */	li r28, 8
/* 800A5E4C 000A136C  6C 1B 80 00 */	xoris r27, r0, 0x8000
lbl_800A5E50:
/* 800A5E50 000A1370  4B FF 2F 79 */	bl OSGetTime
/* 800A5E54 000A1374  7C 9E 23 78 */	mr r30, r4
/* 800A5E58 000A1378  7C 7D 1B 78 */	mr r29, r3
lbl_800A5E5C:
/* 800A5E5C 000A137C  4B FF 2F 6D */	bl OSGetTime
/* 800A5E60 000A1380  7C 9E 20 10 */	subfc r4, r30, r4
/* 800A5E64 000A1384  7C 1D 19 10 */	subfe r0, r29, r3
/* 800A5E68 000A1388  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800A5E6C 000A138C  7C 04 E0 10 */	subfc r0, r4, r28
/* 800A5E70 000A1390  7C 63 D9 10 */	subfe r3, r3, r27
/* 800A5E74 000A1394  7C 7B D9 10 */	subfe r3, r27, r27
/* 800A5E78 000A1398  7C 63 00 D1 */	neg. r3, r3
/* 800A5E7C 000A139C  41 82 FF E0 */	beq lbl_800A5E5C
/* 800A5E80 000A13A0  80 AD 8E 9C */	lwz r5, lbl_8024731C@sda21(r13)
/* 800A5E84 000A13A4  A0 85 00 4E */	lhz r4, 0x4e(r5)
lbl_800A5E88:
/* 800A5E88 000A13A8  7C 80 23 78 */	mr r0, r4
/* 800A5E8C 000A13AC  A0 65 00 50 */	lhz r3, 0x50(r5)
/* 800A5E90 000A13B0  A0 85 00 4E */	lhz r4, 0x4e(r5)
/* 800A5E94 000A13B4  7C 04 00 40 */	cmplw r4, r0
/* 800A5E98 000A13B8  40 82 FF F0 */	bne lbl_800A5E88
/* 800A5E9C 000A13BC  54 80 80 1E */	slwi r0, r4, 0x10
/* 800A5EA0 000A13C0  7C 00 1B 78 */	or r0, r0, r3
/* 800A5EA4 000A13C4  7C 00 D0 40 */	cmplw r0, r26
/* 800A5EA8 000A13C8  7C 1A 03 78 */	mr r26, r0
/* 800A5EAC 000A13CC  40 82 FF A4 */	bne lbl_800A5E50
lbl_800A5EB0:
/* 800A5EB0 000A13D0  38 00 00 01 */	li r0, 1
/* 800A5EB4 000A13D4  3C 60 CC 00 */	lis r3, 0xCC003018@ha
/* 800A5EB8 000A13D8  90 03 30 18 */	stw r0, 0xCC003018@l(r3)
/* 800A5EBC 000A13DC  4B FF 2F 0D */	bl OSGetTime
/* 800A5EC0 000A13E0  38 00 00 00 */	li r0, 0
/* 800A5EC4 000A13E4  7C 9E 23 78 */	mr r30, r4
/* 800A5EC8 000A13E8  7C 7D 1B 78 */	mr r29, r3
/* 800A5ECC 000A13EC  3B 80 00 32 */	li r28, 0x32
/* 800A5ED0 000A13F0  6C 1B 80 00 */	xoris r27, r0, 0x8000
lbl_800A5ED4:
/* 800A5ED4 000A13F4  4B FF 2E F5 */	bl OSGetTime
/* 800A5ED8 000A13F8  7C 9E 20 10 */	subfc r4, r30, r4
/* 800A5EDC 000A13FC  7C 1D 19 10 */	subfe r0, r29, r3
/* 800A5EE0 000A1400  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800A5EE4 000A1404  7C 04 E0 10 */	subfc r0, r4, r28
/* 800A5EE8 000A1408  7C 63 D9 10 */	subfe r3, r3, r27
/* 800A5EEC 000A140C  7C 7B D9 10 */	subfe r3, r27, r27
/* 800A5EF0 000A1410  7C 63 00 D1 */	neg. r3, r3
/* 800A5EF4 000A1414  41 82 FF E0 */	beq lbl_800A5ED4
/* 800A5EF8 000A1418  3B A0 00 00 */	li r29, 0
/* 800A5EFC 000A141C  3C 60 CC 00 */	lis r3, 0xCC003018@ha
/* 800A5F00 000A1420  93 A3 30 18 */	stw r29, 0xCC003018@l(r3)
/* 800A5F04 000A1424  4B FF 2E C5 */	bl OSGetTime
/* 800A5F08 000A1428  6F BE 80 00 */	xoris r30, r29, 0x8000
/* 800A5F0C 000A142C  7C 9B 23 78 */	mr r27, r4
/* 800A5F10 000A1430  7C 7C 1B 78 */	mr r28, r3
/* 800A5F14 000A1434  3B A0 00 05 */	li r29, 5
lbl_800A5F18:
/* 800A5F18 000A1438  4B FF 2E B1 */	bl OSGetTime
/* 800A5F1C 000A143C  7C 9B 20 10 */	subfc r4, r27, r4
/* 800A5F20 000A1440  7C 1C 19 10 */	subfe r0, r28, r3
/* 800A5F24 000A1444  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 800A5F28 000A1448  7C 04 E8 10 */	subfc r0, r4, r29
/* 800A5F2C 000A144C  7C 63 F1 10 */	subfe r3, r3, r30
/* 800A5F30 000A1450  7C 7E F1 10 */	subfe r3, r30, r30
/* 800A5F34 000A1454  7C 63 00 D1 */	neg. r3, r3
/* 800A5F38 000A1458  41 82 FF E0 */	beq lbl_800A5F18
/* 800A5F3C 000A145C  4B FF EF 0D */	bl func_800A4E48
/* 800A5F40 000A1460  54 60 06 3F */	clrlwi. r0, r3, 0x18
/* 800A5F44 000A1464  41 82 00 48 */	beq lbl_800A5F8C
/* 800A5F48 000A1468  4B FF EF C9 */	bl __GXCleanGPFifo
/* 800A5F4C 000A146C  4B FF D8 65 */	bl __GXInitRevisionBits
/* 800A5F50 000A1470  38 00 00 00 */	li r0, 0
/* 800A5F54 000A1474  90 1F 05 FC */	stw r0, 0x5fc(r31)
/* 800A5F58 000A1478  48 00 00 08 */	b lbl_800A5F60
/* 800A5F5C 000A147C  48 00 05 79 */	bl __GXSetDirtyState
lbl_800A5F60:
/* 800A5F60 000A1480  38 00 00 00 */	li r0, 0
/* 800A5F64 000A1484  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 800A5F68 000A1488  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 800A5F6C 000A148C  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5F70 000A1490  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5F74 000A1494  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5F78 000A1498  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5F7C 000A149C  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5F80 000A14A0  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5F84 000A14A4  90 03 80 00 */	stw r0, -0x8000(r3)
/* 800A5F88 000A14A8  4B FE 8A 35 */	bl PPCSync
lbl_800A5F8C:
/* 800A5F8C 000A14AC  39 61 00 20 */	addi r11, r1, 0x20
/* 800A5F90 000A14B0  48 0B 69 FD */	bl _restgpr_26
/* 800A5F94 000A14B4  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800A5F98 000A14B8  7C 08 03 A6 */	mtlr r0
/* 800A5F9C 000A14BC  38 21 00 20 */	addi r1, r1, 0x20
/* 800A5FA0 000A14C0  4E 80 00 20 */	blr 

glabel GXSetDrawSync
/* 800A5FA4 000A14C4  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800A5FA8 000A14C8  7C 08 02 A6 */	mflr r0
/* 800A5FAC 000A14CC  90 01 00 24 */	stw r0, 0x24(r1)
/* 800A5FB0 000A14D0  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800A5FB4 000A14D4  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800A5FB8 000A14D8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800A5FBC 000A14DC  7C 7D 1B 78 */	mr r29, r3
/* 800A5FC0 000A14E0  4B FE F2 F5 */	bl OSDisableInterrupts
/* 800A5FC4 000A14E4  3C 80 CC 01 */	lis r4, 0xCC008000@ha
/* 800A5FC8 000A14E8  38 A0 00 61 */	li r5, 0x61
/* 800A5FCC 000A14EC  98 A4 80 00 */	stb r5, 0xCC008000@l(r4)
/* 800A5FD0 000A14F0  67 A6 48 00 */	oris r6, r29, 0x4800
/* 800A5FD4 000A14F4  38 00 00 47 */	li r0, 0x47
/* 800A5FD8 000A14F8  83 C2 86 40 */	lwz r30, lbl_80247E40@sda21(r2)
/* 800A5FDC 000A14FC  90 C4 80 00 */	stw r6, -0x8000(r4)
/* 800A5FE0 000A1500  53 A6 04 3E */	rlwimi r6, r29, 0, 0x10, 0x1f
/* 800A5FE4 000A1504  50 06 C0 0E */	rlwimi r6, r0, 0x18, 0, 7
/* 800A5FE8 000A1508  7C 7D 1B 78 */	mr r29, r3
/* 800A5FEC 000A150C  98 A4 80 00 */	stb r5, -0x8000(r4)
/* 800A5FF0 000A1510  90 C4 80 00 */	stw r6, -0x8000(r4)
/* 800A5FF4 000A1514  80 1E 05 FC */	lwz r0, 0x5fc(r30)
/* 800A5FF8 000A1518  2C 00 00 00 */	cmpwi r0, 0
/* 800A5FFC 000A151C  41 82 00 08 */	beq lbl_800A6004
/* 800A6000 000A1520  48 00 04 D5 */	bl __GXSetDirtyState
lbl_800A6004:
/* 800A6004 000A1524  3B E0 00 00 */	li r31, 0
/* 800A6008 000A1528  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 800A600C 000A152C  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800A6010 000A1530  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A6014 000A1534  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A6018 000A1538  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A601C 000A153C  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A6020 000A1540  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A6024 000A1544  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A6028 000A1548  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A602C 000A154C  4B FE 89 91 */	bl PPCSync
/* 800A6030 000A1550  7F A3 EB 78 */	mr r3, r29
/* 800A6034 000A1554  4B FE F2 A9 */	bl OSRestoreInterrupts
/* 800A6038 000A1558  B3 FE 00 02 */	sth r31, 2(r30)
/* 800A603C 000A155C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800A6040 000A1560  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800A6044 000A1564  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800A6048 000A1568  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800A604C 000A156C  7C 08 03 A6 */	mtlr r0
/* 800A6050 000A1570  38 21 00 20 */	addi r1, r1, 0x20
/* 800A6054 000A1574  4E 80 00 20 */	blr 

glabel GXSetDrawDone
/* 800A6058 000A1578  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800A605C 000A157C  7C 08 02 A6 */	mflr r0
/* 800A6060 000A1580  90 01 00 14 */	stw r0, 0x14(r1)
/* 800A6064 000A1584  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800A6068 000A1588  93 C1 00 08 */	stw r30, 8(r1)
/* 800A606C 000A158C  4B FE F2 49 */	bl OSDisableInterrupts
/* 800A6070 000A1590  3C A0 CC 01 */	lis r5, 0xCC008000@ha
/* 800A6074 000A1594  38 00 00 61 */	li r0, 0x61
/* 800A6078 000A1598  3C 80 45 00 */	lis r4, 0x45000002@ha
/* 800A607C 000A159C  98 05 80 00 */	stb r0, 0xCC008000@l(r5)
/* 800A6080 000A15A0  38 04 00 02 */	addi r0, r4, 0x45000002@l
/* 800A6084 000A15A4  80 82 86 40 */	lwz r4, lbl_80247E40@sda21(r2)
/* 800A6088 000A15A8  90 05 80 00 */	stw r0, -0x8000(r5)
/* 800A608C 000A15AC  7C 7E 1B 78 */	mr r30, r3
/* 800A6090 000A15B0  80 04 05 FC */	lwz r0, 0x5fc(r4)
/* 800A6094 000A15B4  2C 00 00 00 */	cmpwi r0, 0
/* 800A6098 000A15B8  41 82 00 08 */	beq lbl_800A60A0
/* 800A609C 000A15BC  48 00 04 39 */	bl __GXSetDirtyState
lbl_800A60A0:
/* 800A60A0 000A15C0  3B E0 00 00 */	li r31, 0
/* 800A60A4 000A15C4  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 800A60A8 000A15C8  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800A60AC 000A15CC  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A60B0 000A15D0  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A60B4 000A15D4  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A60B8 000A15D8  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A60BC 000A15DC  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A60C0 000A15E0  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A60C4 000A15E4  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A60C8 000A15E8  4B FE 88 F5 */	bl PPCSync
/* 800A60CC 000A15EC  9B ED 8E E0 */	stb r31, lbl_80247360@sda21(r13)
/* 800A60D0 000A15F0  7F C3 F3 78 */	mr r3, r30
/* 800A60D4 000A15F4  4B FE F2 09 */	bl OSRestoreInterrupts
/* 800A60D8 000A15F8  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800A60DC 000A15FC  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800A60E0 000A1600  83 C1 00 08 */	lwz r30, 8(r1)
/* 800A60E4 000A1604  7C 08 03 A6 */	mtlr r0
/* 800A60E8 000A1608  38 21 00 10 */	addi r1, r1, 0x10
/* 800A60EC 000A160C  4E 80 00 20 */	blr 

glabel GXDrawDone
/* 800A60F0 000A1610  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800A60F4 000A1614  7C 08 02 A6 */	mflr r0
/* 800A60F8 000A1618  90 01 00 14 */	stw r0, 0x14(r1)
/* 800A60FC 000A161C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800A6100 000A1620  93 C1 00 08 */	stw r30, 8(r1)
/* 800A6104 000A1624  4B FE F1 B1 */	bl OSDisableInterrupts
/* 800A6108 000A1628  3C A0 CC 01 */	lis r5, 0xCC008000@ha
/* 800A610C 000A162C  38 00 00 61 */	li r0, 0x61
/* 800A6110 000A1630  3C 80 45 00 */	lis r4, 0x45000002@ha
/* 800A6114 000A1634  98 05 80 00 */	stb r0, 0xCC008000@l(r5)
/* 800A6118 000A1638  38 04 00 02 */	addi r0, r4, 0x45000002@l
/* 800A611C 000A163C  80 82 86 40 */	lwz r4, lbl_80247E40@sda21(r2)
/* 800A6120 000A1640  90 05 80 00 */	stw r0, -0x8000(r5)
/* 800A6124 000A1644  7C 7E 1B 78 */	mr r30, r3
/* 800A6128 000A1648  80 04 05 FC */	lwz r0, 0x5fc(r4)
/* 800A612C 000A164C  2C 00 00 00 */	cmpwi r0, 0
/* 800A6130 000A1650  41 82 00 08 */	beq lbl_800A6138
/* 800A6134 000A1654  48 00 03 A1 */	bl __GXSetDirtyState
lbl_800A6138:
/* 800A6138 000A1658  3B E0 00 00 */	li r31, 0
/* 800A613C 000A165C  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 800A6140 000A1660  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 800A6144 000A1664  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A6148 000A1668  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A614C 000A166C  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A6150 000A1670  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A6154 000A1674  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A6158 000A1678  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A615C 000A167C  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 800A6160 000A1680  4B FE 88 5D */	bl PPCSync
/* 800A6164 000A1684  9B ED 8E E0 */	stb r31, lbl_80247360@sda21(r13)
/* 800A6168 000A1688  7F C3 F3 78 */	mr r3, r30
/* 800A616C 000A168C  4B FE F1 71 */	bl OSRestoreInterrupts
/* 800A6170 000A1690  4B FE F1 45 */	bl OSDisableInterrupts
/* 800A6174 000A1694  7C 7E 1B 78 */	mr r30, r3
/* 800A6178 000A1698  48 00 00 0C */	b lbl_800A6184
lbl_800A617C:
/* 800A617C 000A169C  38 6D 8E D8 */	addi r3, r13, lbl_80247358@sda21
/* 800A6180 000A16A0  4B FF 2A 69 */	bl OSSleepThread
lbl_800A6184:
/* 800A6184 000A16A4  88 0D 8E E0 */	lbz r0, lbl_80247360@sda21(r13)
/* 800A6188 000A16A8  2C 00 00 00 */	cmpwi r0, 0
/* 800A618C 000A16AC  41 82 FF F0 */	beq lbl_800A617C
/* 800A6190 000A16B0  7F C3 F3 78 */	mr r3, r30
/* 800A6194 000A16B4  4B FE F1 49 */	bl OSRestoreInterrupts
/* 800A6198 000A16B8  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800A619C 000A16BC  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800A61A0 000A16C0  83 C1 00 08 */	lwz r30, 8(r1)
/* 800A61A4 000A16C4  7C 08 03 A6 */	mtlr r0
/* 800A61A8 000A16C8  38 21 00 10 */	addi r1, r1, 0x10
/* 800A61AC 000A16CC  4E 80 00 20 */	blr 

glabel GXPixModeSync
/* 800A61B0 000A16D0  3C 80 CC 01 */	lis r4, 0xCC008000@ha
/* 800A61B4 000A16D4  38 00 00 61 */	li r0, 0x61
/* 800A61B8 000A16D8  98 04 80 00 */	stb r0, 0xCC008000@l(r4)
/* 800A61BC 000A16DC  38 00 00 00 */	li r0, 0
/* 800A61C0 000A16E0  80 A2 86 40 */	lwz r5, lbl_80247E40@sda21(r2)
/* 800A61C4 000A16E4  80 65 02 2C */	lwz r3, 0x22c(r5)
/* 800A61C8 000A16E8  90 64 80 00 */	stw r3, -0x8000(r4)
/* 800A61CC 000A16EC  B0 05 00 02 */	sth r0, 2(r5)
/* 800A61D0 000A16F0  4E 80 00 20 */	blr 

glabel GXPokeAlphaMode
/* 800A61D4 000A16F4  80 AD 8E 98 */	lwz r5, lbl_80247318@sda21(r13)
/* 800A61D8 000A16F8  50 64 40 2E */	rlwimi r4, r3, 8, 0, 0x17
/* 800A61DC 000A16FC  B0 85 00 06 */	sth r4, 6(r5)
/* 800A61E0 000A1700  4E 80 00 20 */	blr 

glabel GXPokeAlphaRead
/* 800A61E4 000A1704  38 00 00 00 */	li r0, 0
/* 800A61E8 000A1708  80 8D 8E 98 */	lwz r4, lbl_80247318@sda21(r13)
/* 800A61EC 000A170C  50 60 07 BE */	rlwimi r0, r3, 0, 0x1e, 0x1f
/* 800A61F0 000A1710  60 00 00 04 */	ori r0, r0, 4
/* 800A61F4 000A1714  B0 04 00 08 */	sth r0, 8(r4)
/* 800A61F8 000A1718  4E 80 00 20 */	blr 

glabel GXPokeAlphaUpdate
/* 800A61FC 000A171C  80 8D 8E 98 */	lwz r4, lbl_80247318@sda21(r13)
/* 800A6200 000A1720  A0 04 00 02 */	lhz r0, 2(r4)
/* 800A6204 000A1724  50 60 26 F6 */	rlwimi r0, r3, 4, 0x1b, 0x1b
/* 800A6208 000A1728  B0 04 00 02 */	sth r0, 2(r4)
/* 800A620C 000A172C  4E 80 00 20 */	blr 

glabel GXPokeBlendMode
/* 800A6210 000A1730  80 ED 8E 98 */	lwz r7, lbl_80247318@sda21(r13)
/* 800A6214 000A1734  2C 03 00 01 */	cmpwi r3, 1
/* 800A6218 000A1738  38 00 00 00 */	li r0, 0
/* 800A621C 000A173C  A1 27 00 02 */	lhz r9, 2(r7)
/* 800A6220 000A1740  41 82 00 0C */	beq lbl_800A622C
/* 800A6224 000A1744  2C 03 00 03 */	cmpwi r3, 3
/* 800A6228 000A1748  40 82 00 08 */	bne lbl_800A6230
lbl_800A622C:
/* 800A622C 000A174C  38 00 00 01 */	li r0, 1
lbl_800A6230:
/* 800A6230 000A1750  38 E3 FF FD */	addi r7, r3, -3
/* 800A6234 000A1754  50 09 07 FE */	rlwimi r9, r0, 0, 0x1f, 0x1f
/* 800A6238 000A1758  38 03 FF FE */	addi r0, r3, -2
/* 800A623C 000A175C  80 6D 8E 98 */	lwz r3, lbl_80247318@sda21(r13)
/* 800A6240 000A1760  7C E8 00 34 */	cntlzw r8, r7
/* 800A6244 000A1764  7C 07 00 34 */	cntlzw r7, r0
/* 800A6248 000A1768  38 00 00 41 */	li r0, 0x41
/* 800A624C 000A176C  51 09 35 28 */	rlwimi r9, r8, 6, 0x14, 0x14
/* 800A6250 000A1770  50 E9 E7 BC */	rlwimi r9, r7, 0x1c, 0x1e, 0x1e
/* 800A6254 000A1774  50 C9 64 26 */	rlwimi r9, r6, 0xc, 0x10, 0x13
/* 800A6258 000A1778  50 89 45 6E */	rlwimi r9, r4, 8, 0x15, 0x17
/* 800A625C 000A177C  50 A9 2E 34 */	rlwimi r9, r5, 5, 0x18, 0x1a
/* 800A6260 000A1780  50 09 C0 0E */	rlwimi r9, r0, 0x18, 0, 7
/* 800A6264 000A1784  B1 23 00 02 */	sth r9, 2(r3)
/* 800A6268 000A1788  4E 80 00 20 */	blr 

glabel GXPokeColorUpdate
/* 800A626C 000A178C  80 8D 8E 98 */	lwz r4, lbl_80247318@sda21(r13)
/* 800A6270 000A1790  A0 04 00 02 */	lhz r0, 2(r4)
/* 800A6274 000A1794  50 60 1F 38 */	rlwimi r0, r3, 3, 0x1c, 0x1c
/* 800A6278 000A1798  B0 04 00 02 */	sth r0, 2(r4)
/* 800A627C 000A179C  4E 80 00 20 */	blr 

glabel GXPokeDstAlpha
/* 800A6280 000A17A0  80 AD 8E 98 */	lwz r5, lbl_80247318@sda21(r13)
/* 800A6284 000A17A4  38 00 00 00 */	li r0, 0
/* 800A6288 000A17A8  50 80 06 3E */	rlwimi r0, r4, 0, 0x18, 0x1f
/* 800A628C 000A17AC  50 60 45 EE */	rlwimi r0, r3, 8, 0x17, 0x17
/* 800A6290 000A17B0  B0 05 00 04 */	sth r0, 4(r5)
/* 800A6294 000A17B4  4E 80 00 20 */	blr 

glabel GXPokeDither
/* 800A6298 000A17B8  80 8D 8E 98 */	lwz r4, lbl_80247318@sda21(r13)
/* 800A629C 000A17BC  A0 04 00 02 */	lhz r0, 2(r4)
/* 800A62A0 000A17C0  50 60 17 7A */	rlwimi r0, r3, 2, 0x1d, 0x1d
/* 800A62A4 000A17C4  B0 04 00 02 */	sth r0, 2(r4)
/* 800A62A8 000A17C8  4E 80 00 20 */	blr 

glabel GXPokeZMode
/* 800A62AC 000A17CC  80 CD 8E 98 */	lwz r6, lbl_80247318@sda21(r13)
/* 800A62B0 000A17D0  38 00 00 00 */	li r0, 0
/* 800A62B4 000A17D4  50 60 07 FE */	rlwimi r0, r3, 0, 0x1f, 0x1f
/* 800A62B8 000A17D8  50 80 0F 3C */	rlwimi r0, r4, 1, 0x1c, 0x1e
/* 800A62BC 000A17DC  50 A0 26 F6 */	rlwimi r0, r5, 4, 0x1b, 0x1b
/* 800A62C0 000A17E0  B0 06 00 00 */	sth r0, 0(r6)
/* 800A62C4 000A17E4  4E 80 00 20 */	blr 

glabel func_800A62C8
/* 800A62C8 000A17E8  38 00 00 01 */	li r0, 1
/* 800A62CC 000A17EC  3C C0 C8 00 */	lis r6, 0xc800
/* 800A62D0 000A17F0  50 66 15 3A */	rlwimi r6, r3, 2, 0x14, 0x1d
/* 800A62D4 000A17F4  50 86 62 A6 */	rlwimi r6, r4, 0xc, 0xa, 0x13
/* 800A62D8 000A17F8  50 06 B2 12 */	rlwimi r6, r0, 0x16, 8, 9
/* 800A62DC 000A17FC  90 A6 00 00 */	stw r5, 0(r6)
/* 800A62E0 000A1800  4E 80 00 20 */	blr 

glabel GXSetDrawSyncCallback
/* 800A62E4 000A1804  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800A62E8 000A1808  7C 08 02 A6 */	mflr r0
/* 800A62EC 000A180C  90 01 00 14 */	stw r0, 0x14(r1)
/* 800A62F0 000A1810  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800A62F4 000A1814  93 C1 00 08 */	stw r30, 8(r1)
/* 800A62F8 000A1818  7C 7E 1B 78 */	mr r30, r3
/* 800A62FC 000A181C  83 ED 8E E8 */	lwz r31, lbl_80247368@sda21(r13)
/* 800A6300 000A1820  4B FE EF B5 */	bl OSDisableInterrupts
/* 800A6304 000A1824  93 CD 8E E8 */	stw r30, lbl_80247368@sda21(r13)
/* 800A6308 000A1828  4B FE EF D5 */	bl OSRestoreInterrupts
/* 800A630C 000A182C  7F E3 FB 78 */	mr r3, r31
/* 800A6310 000A1830  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800A6314 000A1834  83 C1 00 08 */	lwz r30, 8(r1)
/* 800A6318 000A1838  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800A631C 000A183C  7C 08 03 A6 */	mtlr r0
/* 800A6320 000A1840  38 21 00 10 */	addi r1, r1, 0x10
/* 800A6324 000A1844  4E 80 00 20 */	blr 

glabel GXTokenInterruptHandler
/* 800A6328 000A1848  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 800A632C 000A184C  7C 08 02 A6 */	mflr r0
/* 800A6330 000A1850  90 01 02 E4 */	stw r0, 0x2e4(r1)
/* 800A6334 000A1854  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 800A6338 000A1858  93 C1 02 D8 */	stw r30, 0x2d8(r1)
/* 800A633C 000A185C  7C 9E 23 78 */	mr r30, r4
/* 800A6340 000A1860  80 0D 8E E8 */	lwz r0, lbl_80247368@sda21(r13)
/* 800A6344 000A1864  80 6D 8E 98 */	lwz r3, lbl_80247318@sda21(r13)
/* 800A6348 000A1868  2C 00 00 00 */	cmpwi r0, 0
/* 800A634C 000A186C  A3 E3 00 0E */	lhz r31, 0xe(r3)
/* 800A6350 000A1870  41 82 00 34 */	beq lbl_800A6384
/* 800A6354 000A1874  38 61 00 08 */	addi r3, r1, 8
/* 800A6358 000A1878  4B FE B1 49 */	bl OSClearContext
/* 800A635C 000A187C  38 61 00 08 */	addi r3, r1, 8
/* 800A6360 000A1880  4B FE AF 19 */	bl OSSetCurrentContext
/* 800A6364 000A1884  81 8D 8E E8 */	lwz r12, lbl_80247368@sda21(r13)
/* 800A6368 000A1888  7F E3 FB 78 */	mr r3, r31
/* 800A636C 000A188C  7D 89 03 A6 */	mtctr r12
/* 800A6370 000A1890  4E 80 04 21 */	bctrl 
/* 800A6374 000A1894  38 61 00 08 */	addi r3, r1, 8
/* 800A6378 000A1898  4B FE B1 29 */	bl OSClearContext
/* 800A637C 000A189C  7F C3 F3 78 */	mr r3, r30
/* 800A6380 000A18A0  4B FE AE F9 */	bl OSSetCurrentContext
lbl_800A6384:
/* 800A6384 000A18A4  80 6D 8E 98 */	lwz r3, lbl_80247318@sda21(r13)
/* 800A6388 000A18A8  A0 03 00 0A */	lhz r0, 0xa(r3)
/* 800A638C 000A18AC  60 00 00 04 */	ori r0, r0, 4
/* 800A6390 000A18B0  B0 03 00 0A */	sth r0, 0xa(r3)
/* 800A6394 000A18B4  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 800A6398 000A18B8  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 800A639C 000A18BC  83 C1 02 D8 */	lwz r30, 0x2d8(r1)
/* 800A63A0 000A18C0  7C 08 03 A6 */	mtlr r0
/* 800A63A4 000A18C4  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 800A63A8 000A18C8  4E 80 00 20 */	blr 

glabel GXSetDrawDoneCallback
/* 800A63AC 000A18CC  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800A63B0 000A18D0  7C 08 02 A6 */	mflr r0
/* 800A63B4 000A18D4  90 01 00 14 */	stw r0, 0x14(r1)
/* 800A63B8 000A18D8  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800A63BC 000A18DC  93 C1 00 08 */	stw r30, 8(r1)
/* 800A63C0 000A18E0  7C 7E 1B 78 */	mr r30, r3
/* 800A63C4 000A18E4  83 ED 8E E4 */	lwz r31, lbl_80247364@sda21(r13)
/* 800A63C8 000A18E8  4B FE EE ED */	bl OSDisableInterrupts
/* 800A63CC 000A18EC  93 CD 8E E4 */	stw r30, lbl_80247364@sda21(r13)
/* 800A63D0 000A18F0  4B FE EF 0D */	bl OSRestoreInterrupts
/* 800A63D4 000A18F4  7F E3 FB 78 */	mr r3, r31
/* 800A63D8 000A18F8  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800A63DC 000A18FC  83 C1 00 08 */	lwz r30, 8(r1)
/* 800A63E0 000A1900  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800A63E4 000A1904  7C 08 03 A6 */	mtlr r0
/* 800A63E8 000A1908  38 21 00 10 */	addi r1, r1, 0x10
/* 800A63EC 000A190C  4E 80 00 20 */	blr 

glabel GXFinishInterruptHandler
/* 800A63F0 000A1910  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 800A63F4 000A1914  7C 08 02 A6 */	mflr r0
/* 800A63F8 000A1918  38 60 00 01 */	li r3, 1
/* 800A63FC 000A191C  90 01 02 E4 */	stw r0, 0x2e4(r1)
/* 800A6400 000A1920  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 800A6404 000A1924  7C 9F 23 78 */	mr r31, r4
/* 800A6408 000A1928  80 AD 8E 98 */	lwz r5, lbl_80247318@sda21(r13)
/* 800A640C 000A192C  A0 05 00 0A */	lhz r0, 0xa(r5)
/* 800A6410 000A1930  60 00 00 08 */	ori r0, r0, 8
/* 800A6414 000A1934  B0 05 00 0A */	sth r0, 0xa(r5)
/* 800A6418 000A1938  80 0D 8E E4 */	lwz r0, lbl_80247364@sda21(r13)
/* 800A641C 000A193C  98 6D 8E E0 */	stb r3, lbl_80247360@sda21(r13)
/* 800A6420 000A1940  2C 00 00 00 */	cmpwi r0, 0
/* 800A6424 000A1944  41 82 00 30 */	beq lbl_800A6454
/* 800A6428 000A1948  38 61 00 08 */	addi r3, r1, 8
/* 800A642C 000A194C  4B FE B0 75 */	bl OSClearContext
/* 800A6430 000A1950  38 61 00 08 */	addi r3, r1, 8
/* 800A6434 000A1954  4B FE AE 45 */	bl OSSetCurrentContext
/* 800A6438 000A1958  81 8D 8E E4 */	lwz r12, lbl_80247364@sda21(r13)
/* 800A643C 000A195C  7D 89 03 A6 */	mtctr r12
/* 800A6440 000A1960  4E 80 04 21 */	bctrl 
/* 800A6444 000A1964  38 61 00 08 */	addi r3, r1, 8
/* 800A6448 000A1968  4B FE B0 59 */	bl OSClearContext
/* 800A644C 000A196C  7F E3 FB 78 */	mr r3, r31
/* 800A6450 000A1970  4B FE AE 29 */	bl OSSetCurrentContext
lbl_800A6454:
/* 800A6454 000A1974  38 6D 8E D8 */	addi r3, r13, lbl_80247358@sda21
/* 800A6458 000A1978  4B FF 28 7D */	bl OSWakeupThread
/* 800A645C 000A197C  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 800A6460 000A1980  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 800A6464 000A1984  7C 08 03 A6 */	mtlr r0
/* 800A6468 000A1988  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 800A646C 000A198C  4E 80 00 20 */	blr 

glabel GXPEInit
/* 800A6470 000A1990  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800A6474 000A1994  7C 08 02 A6 */	mflr r0
/* 800A6478 000A1998  3C 80 80 0A */	lis r4, GXTokenInterruptHandler@ha
/* 800A647C 000A199C  38 60 00 12 */	li r3, 0x12
/* 800A6480 000A19A0  90 01 00 14 */	stw r0, 0x14(r1)
/* 800A6484 000A19A4  38 84 63 28 */	addi r4, r4, GXTokenInterruptHandler@l
/* 800A6488 000A19A8  4B FE EE 79 */	bl __OSSetInterruptHandler
/* 800A648C 000A19AC  3C 80 80 0A */	lis r4, GXFinishInterruptHandler@ha
/* 800A6490 000A19B0  38 60 00 13 */	li r3, 0x13
/* 800A6494 000A19B4  38 84 63 F0 */	addi r4, r4, GXFinishInterruptHandler@l
/* 800A6498 000A19B8  4B FE EE 69 */	bl __OSSetInterruptHandler
/* 800A649C 000A19BC  38 6D 8E D8 */	addi r3, r13, lbl_80247358@sda21
/* 800A64A0 000A19C0  4B FF 16 BD */	bl OSInitThreadQueue
/* 800A64A4 000A19C4  38 60 20 00 */	li r3, 0x2000
/* 800A64A8 000A19C8  4B FE F2 1D */	bl __OSUnmaskInterrupts
/* 800A64AC 000A19CC  38 60 10 00 */	li r3, 0x1000
/* 800A64B0 000A19D0  4B FE F2 15 */	bl __OSUnmaskInterrupts
/* 800A64B4 000A19D4  80 6D 8E 98 */	lwz r3, lbl_80247318@sda21(r13)
/* 800A64B8 000A19D8  A0 03 00 0A */	lhz r0, 0xa(r3)
/* 800A64BC 000A19DC  60 00 00 0F */	ori r0, r0, 0xf
/* 800A64C0 000A19E0  B0 03 00 0A */	sth r0, 0xa(r3)
/* 800A64C4 000A19E4  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800A64C8 000A19E8  7C 08 03 A6 */	mtlr r0
/* 800A64CC 000A19EC  38 21 00 10 */	addi r1, r1, 0x10
/* 800A64D0 000A19F0  4E 80 00 20 */	blr 

.section .sbss, "wa" # 0x80246B60 - 0x80247800

glabel lbl_80247358
	.skip 0x8

glabel lbl_80247360
	.skip 0x4

glabel lbl_80247364
	.skip 0x4

glabel lbl_80247368
	.skip 0x8