.include "macros.inc"

.section .text, "ax"

glabel OSInitMessageQueue
/* 80095A50 00090F70  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 80095A54 00090F74  7C 08 02 A6 */	mflr r0
/* 80095A58 00090F78  90 01 00 24 */	stw r0, 0x24(r1)
/* 80095A5C 00090F7C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 80095A60 00090F80  7C BF 2B 78 */	mr r31, r5
/* 80095A64 00090F84  93 C1 00 18 */	stw r30, 0x18(r1)
/* 80095A68 00090F88  7C 9E 23 78 */	mr r30, r4
/* 80095A6C 00090F8C  93 A1 00 14 */	stw r29, 0x14(r1)
/* 80095A70 00090F90  7C 7D 1B 78 */	mr r29, r3
/* 80095A74 00090F94  48 00 20 E9 */	bl OSInitThreadQueue
/* 80095A78 00090F98  38 7D 00 08 */	addi r3, r29, 8
/* 80095A7C 00090F9C  48 00 20 E1 */	bl OSInitThreadQueue
/* 80095A80 00090FA0  38 00 00 00 */	li r0, 0
/* 80095A84 00090FA4  93 DD 00 10 */	stw r30, 0x10(r29)
/* 80095A88 00090FA8  93 FD 00 14 */	stw r31, 0x14(r29)
/* 80095A8C 00090FAC  90 1D 00 18 */	stw r0, 0x18(r29)
/* 80095A90 00090FB0  90 1D 00 1C */	stw r0, 0x1c(r29)
/* 80095A94 00090FB4  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 80095A98 00090FB8  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 80095A9C 00090FBC  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 80095AA0 00090FC0  80 01 00 24 */	lwz r0, 0x24(r1)
/* 80095AA4 00090FC4  7C 08 03 A6 */	mtlr r0
/* 80095AA8 00090FC8  38 21 00 20 */	addi r1, r1, 0x20
/* 80095AAC 00090FCC  4E 80 00 20 */	blr 

glabel OSSendMessage
/* 80095AB0 00090FD0  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 80095AB4 00090FD4  7C 08 02 A6 */	mflr r0
/* 80095AB8 00090FD8  90 01 00 24 */	stw r0, 0x24(r1)
/* 80095ABC 00090FDC  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 80095AC0 00090FE0  7C BF 2B 78 */	mr r31, r5
/* 80095AC4 00090FE4  93 C1 00 18 */	stw r30, 0x18(r1)
/* 80095AC8 00090FE8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 80095ACC 00090FEC  7C 9D 23 78 */	mr r29, r4
/* 80095AD0 00090FF0  93 81 00 10 */	stw r28, 0x10(r1)
/* 80095AD4 00090FF4  7C 7C 1B 78 */	mr r28, r3
/* 80095AD8 00090FF8  4B FF F7 DD */	bl OSDisableInterrupts
/* 80095ADC 00090FFC  7C 7E 1B 78 */	mr r30, r3
/* 80095AE0 00091000  57 FF 07 FE */	clrlwi r31, r31, 0x1f
/* 80095AE4 00091004  48 00 00 24 */	b .L_80095B08
.L_80095AE8:
/* 80095AE8 00091008  2C 1F 00 00 */	cmpwi r31, 0
/* 80095AEC 0009100C  40 82 00 14 */	bne .L_80095B00
/* 80095AF0 00091010  7F C3 F3 78 */	mr r3, r30
/* 80095AF4 00091014  4B FF F7 E9 */	bl OSRestoreInterrupts
/* 80095AF8 00091018  38 60 00 00 */	li r3, 0
/* 80095AFC 0009101C  48 00 00 5C */	b .L_80095B58
.L_80095B00:
/* 80095B00 00091020  7F 83 E3 78 */	mr r3, r28
/* 80095B04 00091024  48 00 30 E5 */	bl OSSleepThread
.L_80095B08:
/* 80095B08 00091028  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 80095B0C 0009102C  80 DC 00 14 */	lwz r6, 0x14(r28)
/* 80095B10 00091030  7C 06 20 00 */	cmpw r6, r4
/* 80095B14 00091034  40 81 FF D4 */	ble .L_80095AE8
/* 80095B18 00091038  80 1C 00 18 */	lwz r0, 0x18(r28)
/* 80095B1C 0009103C  38 7C 00 08 */	addi r3, r28, 8
/* 80095B20 00091040  80 BC 00 10 */	lwz r5, 0x10(r28)
/* 80095B24 00091044  7C 80 22 14 */	add r4, r0, r4
/* 80095B28 00091048  7C 04 33 D6 */	divw r0, r4, r6
/* 80095B2C 0009104C  7C 00 31 D6 */	mullw r0, r0, r6
/* 80095B30 00091050  7C 00 20 50 */	subf r0, r0, r4
/* 80095B34 00091054  54 00 10 3A */	slwi r0, r0, 2
/* 80095B38 00091058  7F A5 01 2E */	stwx r29, r5, r0
/* 80095B3C 0009105C  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 80095B40 00091060  38 04 00 01 */	addi r0, r4, 1
/* 80095B44 00091064  90 1C 00 1C */	stw r0, 0x1c(r28)
/* 80095B48 00091068  48 00 31 8D */	bl OSWakeupThread
/* 80095B4C 0009106C  7F C3 F3 78 */	mr r3, r30
/* 80095B50 00091070  4B FF F7 8D */	bl OSRestoreInterrupts
/* 80095B54 00091074  38 60 00 01 */	li r3, 1
.L_80095B58:
/* 80095B58 00091078  80 01 00 24 */	lwz r0, 0x24(r1)
/* 80095B5C 0009107C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 80095B60 00091080  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 80095B64 00091084  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 80095B68 00091088  83 81 00 10 */	lwz r28, 0x10(r1)
/* 80095B6C 0009108C  7C 08 03 A6 */	mtlr r0
/* 80095B70 00091090  38 21 00 20 */	addi r1, r1, 0x20
/* 80095B74 00091094  4E 80 00 20 */	blr 

glabel OSReceiveMessage
/* 80095B78 00091098  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 80095B7C 0009109C  7C 08 02 A6 */	mflr r0
/* 80095B80 000910A0  90 01 00 24 */	stw r0, 0x24(r1)
/* 80095B84 000910A4  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 80095B88 000910A8  7C 7F 1B 78 */	mr r31, r3
/* 80095B8C 000910AC  93 C1 00 18 */	stw r30, 0x18(r1)
/* 80095B90 000910B0  7C BE 2B 78 */	mr r30, r5
/* 80095B94 000910B4  93 A1 00 14 */	stw r29, 0x14(r1)
/* 80095B98 000910B8  93 81 00 10 */	stw r28, 0x10(r1)
/* 80095B9C 000910BC  7C 9C 23 78 */	mr r28, r4
/* 80095BA0 000910C0  4B FF F7 15 */	bl OSDisableInterrupts
/* 80095BA4 000910C4  7C 7D 1B 78 */	mr r29, r3
/* 80095BA8 000910C8  57 DE 07 FE */	clrlwi r30, r30, 0x1f
/* 80095BAC 000910CC  48 00 00 24 */	b .L_80095BD0
.L_80095BB0:
/* 80095BB0 000910D0  2C 1E 00 00 */	cmpwi r30, 0
/* 80095BB4 000910D4  40 82 00 14 */	bne .L_80095BC8
/* 80095BB8 000910D8  7F A3 EB 78 */	mr r3, r29
/* 80095BBC 000910DC  4B FF F7 21 */	bl OSRestoreInterrupts
/* 80095BC0 000910E0  38 60 00 00 */	li r3, 0
/* 80095BC4 000910E4  48 00 00 70 */	b .L_80095C34
.L_80095BC8:
/* 80095BC8 000910E8  38 7F 00 08 */	addi r3, r31, 8
/* 80095BCC 000910EC  48 00 30 1D */	bl OSSleepThread
.L_80095BD0:
/* 80095BD0 000910F0  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 80095BD4 000910F4  2C 00 00 00 */	cmpwi r0, 0
/* 80095BD8 000910F8  41 82 FF D8 */	beq .L_80095BB0
/* 80095BDC 000910FC  2C 1C 00 00 */	cmpwi r28, 0
/* 80095BE0 00091100  41 82 00 18 */	beq .L_80095BF8
/* 80095BE4 00091104  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 80095BE8 00091108  80 7F 00 10 */	lwz r3, 0x10(r31)
/* 80095BEC 0009110C  54 00 10 3A */	slwi r0, r0, 2
/* 80095BF0 00091110  7C 03 00 2E */	lwzx r0, r3, r0
/* 80095BF4 00091114  90 1C 00 00 */	stw r0, 0(r28)
.L_80095BF8:
/* 80095BF8 00091118  80 9F 00 18 */	lwz r4, 0x18(r31)
/* 80095BFC 0009111C  7F E3 FB 78 */	mr r3, r31
/* 80095C00 00091120  80 DF 00 14 */	lwz r6, 0x14(r31)
/* 80095C04 00091124  38 E4 00 01 */	addi r7, r4, 1
/* 80095C08 00091128  80 9F 00 1C */	lwz r4, 0x1c(r31)
/* 80095C0C 0009112C  7C A7 33 D6 */	divw r5, r7, r6
/* 80095C10 00091130  38 04 FF FF */	addi r0, r4, -1
/* 80095C14 00091134  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 80095C18 00091138  7C 05 31 D6 */	mullw r0, r5, r6
/* 80095C1C 0009113C  7C 00 38 50 */	subf r0, r0, r7
/* 80095C20 00091140  90 1F 00 18 */	stw r0, 0x18(r31)
/* 80095C24 00091144  48 00 30 B1 */	bl OSWakeupThread
/* 80095C28 00091148  7F A3 EB 78 */	mr r3, r29
/* 80095C2C 0009114C  4B FF F6 B1 */	bl OSRestoreInterrupts
/* 80095C30 00091150  38 60 00 01 */	li r3, 1
.L_80095C34:
/* 80095C34 00091154  80 01 00 24 */	lwz r0, 0x24(r1)
/* 80095C38 00091158  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 80095C3C 0009115C  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 80095C40 00091160  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 80095C44 00091164  83 81 00 10 */	lwz r28, 0x10(r1)
/* 80095C48 00091168  7C 08 03 A6 */	mtlr r0
/* 80095C4C 0009116C  38 21 00 20 */	addi r1, r1, 0x20
/* 80095C50 00091170  4E 80 00 20 */	blr 

