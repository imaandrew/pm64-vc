MEMORY
{
    text : origin = 0x80004000
}

SECTIONS
{
    GROUP:
    {
        .init: {
            init0.o(.text)
            __start.o(.text)
            __init_registers.o(.text)
            __init_data.o(.text)
            __init_hardware.o(.text)
            __flush_cache.o(.text)
            memcpy.o(.text)
            __fill_mem.o(.text)
            memset.o(.text)
            TRK_mem.o(.text)
            __exception.o(.init)
            init1.o(.text)
            *(.init)
        }
        extab_ ALIGN(0x20):{}
        extabindex_ ALIGN(0x20):{}
        .text ALIGN(0x20):{}
        .ctors ALIGN(0x20):{}
        .dtors ALIGN(0x20):{}
        .rodata ALIGN(0x20):{}
        .data ALIGN(0x20):{}
        .bss ALIGN(0x40):{}
        .sdata ALIGN(0x20):{}
        .sbss ALIGN(0x20):{}
        .sdata2 ALIGN(0x20):{}
        .sbss2 ALIGN(0x20):{}
        .stack ALIGN(0x100):{}

    } > text
    sz_init = SIZEOF(.init);
    szextab_ = SIZEOF(extab_);
    szextabindex_ = SIZEOF(extabindex_);
    sz_text = SIZEOF(.text);
    sz_ctors = SIZEOF(.ctors);
    sz_dtors = SIZEOF(.dtors);
    sz_rodata = SIZEOF(.rodata);
    sz_data = SIZEOF(.data);
    sz_bss = SIZEOF(.bss);
    sz_sdata = SIZEOF(.sdata);
    sz_sbss = SIZEOF(.sbss);
    sz_sdata2 = SIZEOF(.sdata2);
    sz_sbss2 = SIZEOF(.sbss2);
    _stack_addr = (_f_sbss2 + SIZEOF(.sbss2) + 65535 + 0x7) & ~0x7;
    _stack_end = _f_sbss2 + SIZEOF(.sbss2);
    _db_stack_addr = (_stack_addr + 0x2000);
    _db_stack_end = _stack_addr;
    __ArenaLo = (_stack_addr + 0x1f) & ~0x1f;
    __ArenaHi = 0x81700000;
}

FORCEFILES 
{
}